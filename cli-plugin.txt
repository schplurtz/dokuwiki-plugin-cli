====== Command Line Interface (CLI) Plugin  ======

---- plugin ----
description: Format command line transcripts
author     : Chris P. Jobling
email      : C.P.Jobling@Swansea.ac.uk
type       : syntax
lastupdate : 2010-08-07
compatible : 
depends    : 
conflicts  : 
similar    : code
tags       : code, cli, syntax, highlighting
----

This [[wiki:plugins|plugin]] (or [[doku>plugin:cli]]) brings a Command Line Interface formatter to [[wiki:Dokuwiki]] allowing you to format the output of a transcript say for a user manual or on-line tutorial. It is designed to work with the output of a standard Unix Bash Shell, but should be suitable to document other kinds of CLI interaction, e.g. Windows Command Window, Python and Ruby, Matlab, etc. 

The assumptions made are 
  - all user commands start with a prompt 
  - the CLI prompt will end in a recognizable character (typically '$' or '>')
  - user commands will follow the CLI prompt on the same line
  - lines that do not start with a prompt are outputs from the CLI((this turns out to be a problem for the Ruby interactive shell //irb// which seems to prefix every line with a prompt!))

A key design feature is that it should be possible to display a CLI transcript (e.g. output from a history file or copy of text from a console window) for display with the mimumum of additional markup.  

It is possible to adjust the style of the display using a style sheet. For details refer to [[#style.css]].

==== Notes ====

  * My version of this page -- which could be more recently updated -- can be found [[http://www.cpjobling.org.uk/dokuwiki/plugins:cli|here]]

  * Since 7 August 2010 the source for this plugin code has been hosted at GitHub at http://github.com/cpjobling/plugin-cli. To install the plugin when you have ''git'' installed on your DokuWiki server, you just need to:

  cd ../dokuwiki/plugins
  git clone git://github.com/cpjobling/plugin-cli.git cli 




===== Acknowledgements =====

A similar feature is to be found in [[http://moinmoin.wikiwikiweb.de/|MoinMoin Wiki]] and [[http://www.tiddlywiki.com/|TiddlyWiki]]. The styles are based on those developed for the [[http://www.ee.surrey.ac.uk/Teaching/Unix/|UNIX Tutorial for Beginners]] by Michael Stonebank. The plugin and its documentation are based on lessons learned from the [[http://wiki.splitbrain.org/plugin:tutorial|Plugin Tutorial]] and Christopher Smith's implementation and documentation of the [[http://wiki.splitbrain.org/plugin:boxes|boxes plugin]].

Several improvements suggested by Stephane Chazelas and Andy Webber.









===== Syntax =====

A simple Bash Shell interaction:

  <cli>
  user@host:~/somedir $ ls # List current directory
  conf      lang         README        screen.gif  ui
  info.txt  manager.dat  renderer.php  syntax.php
  user@host:~/somedir $ 
  </cli>

Should be rendered:

<html>
<pre class="cli">
<span class="cli_prompt">user@host:~/somedir $</span> <span class="cli_command">ls</span> <span class="cli_comment"># List current directory</span>
<span class="cli_output">conf      lang         README        screen.gif  ui</span>
<span class="cli_output">info.txt  manager.dat  renderer.php  syntax.php</span>
<span class="cli_prompt">user@host:~/somedir $</span>
</pre>
</html>

The full syntax:  

  <cli t=shortcut prompt='prompt ' comment='comment' continue='continue'>
  transcript
  </cli>

  * //prompt// --- [optional] the prompt used by the CLI. See configuration below for the description of the syntax. If ommitted, the default value is used.
  * //continue// -- [optional]. The continue prompt used by the CLI. See configuration below for the description of the syntax. If ommitted, the default value is used.
  * //comment// --- [optional] the comment used by the CLI. See configuration below for the description of the syntax. If ommitted, the default value is used.
  * //shortcut// --- This is the name of a shortcut, ie a predefined set of //prompt//, //continue// and //comment//.

Each of the four values may be enclosed in single (''%%'%%'') or double (''"'') quote if they have spaces or tabs in them.

Values are always set in this order : default, shortcut, individual settings. Ie if you write something like
''<cli continue="===>" t=irb>'', the continue value is first set from defaults, then overriden by the shortcut and finally overriden by the continue option. So in the end, in this example, continue="===>".

Default values match most unix shells use.

The opening ''**<cli ... >**'' must all appear on one line.  The transcript contents can appear over as many lines as are needed.

See the plugin in action [[http://www.cpjobling.org.uk/dokuwiki/test:cli|here]]. The sample page shows examples from a number of CLI interfaces, including various shells, dynamic language interpreters and Matlab.

===== Configuration =====

The plugin has 6 configuration settings. The first 3 are the defaults prompts and comment marker to use.

  * //prompt// is a either a regexp((enclosed in ''/'', ''='', '','', '';'', ''%'', ''@'', or ''='')) that describe the prompt your CLI uses, or a string that should be equal the last char or chars of the prompt. When a regexp is used, it must match from the start of line to the last char considered part of the prompt.ie ''%%/^.*?> /%%'' is correct, but <del>''%%/> /%%''</del> is not. Note that ''"> "'' is correct as it is a string and not a regexp.
  * //continue// is a description of the continue prompt. It uses the same syntax as //prompt//.
  * //comment// is a description of the comment marker. Also a string or regexp as. It is matched only to the part of each transcript lines **after** the prompt. For this regexp, the start of line is the first non-prompt char of a command line.

If any of these is empty, then the cli plugin uses a harcoded internal value that corresponds to the defaults shown below.

Default values :
  * //prompt// ''/^.{0,30}?[$%>#] /''\\ That is the shortest string of at most 30 chars that ends in ''$'', ''%'', ''>'' or ''#'' followed by a space.
  * //continue// ''/^.{0,30}?> /''\\ That is the shortest string of at most 30 char that ends in ''>''.
  * //comment//  ''/(^#)| #/''\\ That is either a sharp sign at start of line (after the prompt) or a space followed by a sharp sign.

The next three settings are used to create named shortcuts. Although default values will work for most of the unix CLI, there are some time when those defaults won't work. For example, the irb [[http://www.ruby-lang.org/|ruby]] shell needs special values for //prompt// and //continue//. Instead of typing each time ''<cli prompt="/^(irb.*?|>)> /" continue="..">'' you may use the previously created irb shortcut : ''<cli t=irb>''. Shortcuts define some replacements for //prompt//, //continue// and //comment//. The syntax to define shortcut this

  name:regexp-or-string

The same name must be defined for each of //prompt//, //continue// and //comment//. It is not necessary that values are given for the thre of them. Here are the defaults

  * //namedprompt//<code>irb:/^(irb.*?|>)> /</code>
  * //namedcontinue//<code>irb:..
R:/^\+ /
python:...
</code>
  * //namedcomment//<code></code>

As you can see, for python, you only have to define a //continue// replacement, as the standard prompt definition will also catch the python prompt.

You may also want to review the default colour scheme in [[#style.css]] to ensure it is appropriate for your wiki.



===== Installation =====
==== Sources: ====

  * Current: [[http://github.com/downloads/cpjobling/plugin-cli/plugin-cli.zip|zip format (5k)]], [[http://github.com/downloads/cpjobling/plugin-cli/plugin-cli.zip|tar.gz format (4k)]]

If your wiki uses the [[plugin:plugin|plugin manager]] you can use them with the links above to install the plugin.  

To install the plugin manually, download the source to your plugin folder, ''lib/plugins'' and extract its contents.  That will create a new plugin folder, ''lib/plugins/cli'', and install the plugin.

The folder will contain:
  style.css      all the cli styles
  syntax.php     plugin script
  info.txt       info file needed by newer dokuwiki
  conf           configuration directory
  lang           translations of string for dokuwiki configuration page

The plugin is now installed.






===== Details =====

==== syntax.php ====
In older version, the plugin was made of only this file, and so the file was presented here. Now that configuration and language files are necessary for the plugin to work there is no point in presenting syntax.php alone here. You should use git or download the archive instead.

==== style.css ====

These may be modified to suit your own requirements.

<code css>
/* plugin:cli */

.cli_output {
	color: blue;
}

.cli_comment {
	color: brown;
}

.cli_prompt {
	color: green;
}

.cli_command {
	color: red;
}

// nested CLI
pre.cli pre.cli {
	background-color: #F8F8F8;
}

/* end plugin:cli */
</code>


===== Revision History =====

  * 2007-09-10 --- First release
  * 2008-13-02 --- Several improvements to lexing and white space handling as suggested by Stephane Chazelas; continuation prompt support and whitespace handling improvements added by Any Webber.
  * 2010-07-08 --- Hosting moved to GitHub. Note, hosting of examples at http://www.cpjobling.org.uk may not be stable.
  * 2011-01-30 --- nesting, config, regexp support, all params read from %%<cli>%%, new precedence for continue_prompt. Schplurtz le déboulonné

===== To Do =====
 
  * It would be nice to support end of line markers for long command strings
  * Doesn't work for transcripts that have no prompt: e.g. executable scripts. Better to use the ''<code>'' tag for these.

===== Bugs =====

  * Care needed for CLI's that use > to end a prompt -- done.
  * Doesn't handle continuation prompts in shells that allow multi-line input. -- done (thanks to Andy Webber)
  * Ruby's multiple output line decorators are likely to cause problems.
  * Bound to be others ... this is my first DokuWiki plugin (actually it's my first attempt at PHP coding ^_^)
  * following codes display right with defaults bu only because prompt is limited in size...
<code>
<cli prompt="#">
# rpm -ivh darcs-1.0.9-3.fc6.i386.rpm
Preparing...                ########################################### [100%]
   1:darcs                  ########################################### [100%]
</cli>
</code>

===== Comments Please =====

I modified the **_render_conversation** function to //remove// first and last blank lines, otherwise it produces two //blank excess output spans//.
<code php>
if ( trim($lines[0]) == "" ) unset( $lines[0] );
if ( trim($lines[count($lines)]) == "" ) unset( $lines[count($lines)] );
</code>
This is just a quick hack and needs more afterthought, of course.

I also did not like the "empty lines got removed" effect, thus the **preg_split** line was also modified:

<code php>
$lines = preg_split('/\n\r|\n|\r/',$match);
</code>

The previous comment still applies.

Added to new release ... CPJ

